{% assign nt_apply_to = "2" %}
                {% assign nt_rules_product_condition_type = "'0'" %}
                {% assign nt_rules_product_ids = "''" %}
                {% assign nt_rules_product_collections = "''" %}
                {% assign nt_rules_product_tags = "''" %}
                {% if nt_apply_to == "2" %} 
                <script>
                    var shopDataNT = {};
                        let getStoreData = document.querySelector('#bss-bcp-store-data');
                        if (getStoreData) {
                            shopDataNT = JSON.parse(document.querySelector('#bss-bcp-store-data').innerHTML);
                        }
                    let customerTag = shopDataNT.customer.tags ? shopDataNT.customer.tags : [];
                    let customerId = shopDataNT.customer.id ? shopDataNT.customer.id : null;
                    let bssListRule = [{"id":313,"shop_id":914,"name":"Purchase Order ","priority":0,"status":1,"apply_to":0,"customer_ids":"","customer_tags":"","auto_tags_order_status":1,"auto_tags_order":"Purchase Order","product_condition_type":0,"product_ids":"","product_collections":"","product_tags":"","due_days":30,"count":1,"time":0,"nt_form":null,"createdAt":"2022-06-17T05:38:19.000Z","updatedAt":"2022-06-17T05:45:37.000Z"}];
                </script>{% endif %}
                
                {% capture scriptNtCheckoutBtn %}{% render 'bss-portal-validate-product-condition-script', nt_apply_to: nt_apply_to, nt_rules_product_condition_type: nt_rules_product_condition_type, nt_rules_product_ids: nt_rules_product_ids, nt_rules_product_collections: nt_rules_product_collections, nt_rules_product_tags: nt_rules_product_tags %}
            <script id="bss-bcp-nt-script">let bssReplaceCheckoutBtn = false;
			let bssPurchaseLateBtnText = "Purchase Late"; let bssPurchaseLateNote = "PURCHASE LATE NOTE";
			let bssPurchaseLateMessage = "Product(s) above is/are not eligible for Purchase Late. They will be removed if you click the Purchase Late button."; let bssPurchaseLateLink = "Proceed to purchase late page";
			let bssPurchaseLateMessageQualify = "You haven't been qualified to use this payment terms. Please contact us for more details.";
function bcpNTFunction() {
    let BSSCPcheckoutBtnQuery = 'form[action*="/cart"] [name="checkout"],' +
        '#dropdown-cart button.btn.btn-checkout.show,' +
        'a.button.checkout-button[href="/checkout"],' +
        'form[action*="/checkout"] .add_to_cart,' +
        'form[action*="/cart"]#cart_form #checkout,' +
        'form[action*="/cart"] button.Cart__Checkout,' +
        'form[action*="/cart"] button.cart__checkout,' +
        'a.btn.disabled.ttmodalbtn[href="/checkout"],' +
        'form[action*="/cart"] [name="checkout"][type="submit"],' +
        'button.Cart__Checkout.Button.Button--primary.Button--full,' +
        '.baskettop button.mini-cart-checkout,' +
        '.tt-dropdown-menu .btn.itemCheckout,' +
        '.bss-btn-checkout-mini-cart,' +
        'button[name="checkout"].btn,' +
        'form[action*="/checkout"] [name="checkout"],' +
        '.cart__footer .cart__checkout-button.button,' +
        '#cartform #checkout,' +
        `#slidedown-cart button[onclick="window.location='/checkout'"],` +
        '#dropdown-cart button.btn.btn-checkout,' +
        '.button.checkout,' +
        'form[action*="/cart"] button[type="submit"].c-btn.c-btn--light.cart__button-update.update-cart,' +
        'form[action*="/cart"] .sp-proceed-to-checkout a[href="/checkout/"],' +
        '.bss-b2b-customer-portal-nt-checkout-btn,' +
        '.checkout-button.button.button--primary.button--full,' +
        '.button.cursor-pointer[name="checkout"],' +
        'form[action="/cart/add"] .product-form--atc .shopify-payment-button button.shopify-payment-button__button'

    let BSSCPcheckoutBtn = document.querySelectorAll(BSSCPcheckoutBtnQuery)

    let BSSCPCustomCheckoutBtn = document.querySelectorAll("span.bss-b2b-customer-portal-custom-checkout")
    document.querySelector('.bss-purchase-late-note').innerHTML = bssPurchaseLateNote;
    document.querySelector('.invalid-netterm-product-message').innerHTML = bssPurchaseLateMessage;
    document.querySelector('.invalid-netterm-rule-message').innerHTML = bssPurchaseLateMessageQualify;
    document.querySelector('.bss-proceed-to-purchase-late').innerHTML = bssPurchaseLateLink;
    {% unless nt_apply_to == "2" %}
    const btnTextDefault = document.createTextNode(bssPurchaseLateBtnText);
    let defaultNtCheckoutBtn = document.createElement('span')
    defaultNtCheckoutBtn.className = 'bss-b2b-customer-portal-nt-checkout-btn-default';
    defaultNtCheckoutBtn.style.width = '130px';
    defaultNtCheckoutBtn.style.height = '40px';
    defaultNtCheckoutBtn.type = 'button';
    defaultNtCheckoutBtn.name = 'checkout';
    defaultNtCheckoutBtn.appendChild(btnTextDefault);
    defaultNtCheckoutBtn.onclick = function () {
        validateProductBeforePurchaseLate();
    }
    if (BSSCPCustomCheckoutBtn.length) {
        for (let i = 0; i < BSSCPCustomCheckoutBtn.length; i++) {
            BSSCPCustomCheckoutBtn[i].after(defaultNtCheckoutBtn)
        }
    }
    {% endunless %}
    {% if nt_apply_to == "2" %}
    for(let i = bssListRule.length - 1; i >= 0; i--) {
        let rule = bssListRule[i];
        let BSSCPNtcheckoutBtn = null;
        let btnText = document.createTextNode(rule.name);
        if (BSSCPcheckoutBtn.length) {
        BSSCPNtcheckoutBtn = document.createElement(BSSCPcheckoutBtn[0].tagName)
        BSSCPNtcheckoutBtn.className = BSSCPcheckoutBtn[0].className + ' bss-b2b-customer-portal-nt-checkout-btn';
        BSSCPNtcheckoutBtn.value = rule.name;
        BSSCPNtcheckoutBtn.id = 'bss-nt-purchase-late-' + rule.id;
        BSSCPNtcheckoutBtn.type = 'button';
        BSSCPNtcheckoutBtn.appendChild(btnText);

        let isApplyAMO = false;
        if ((typeof(BSS_B2B) != 'undefined') && BSS_B2B) {
            let isEnableAMO = false;
            if (BSS_B2B.shopModules && (BSS_B2B.shopModules.length > 0)) {
                BSS_B2B.shopModules.forEach(function (sm) {
                    if (sm.code == "amo") {
                        isEnableAMO = sm.status;
                    }
                })
            }

             if(BSS_B2B != undefined && BSS_B2B.amoRules && !BSS_B2B.amoRules.length) {
                  BSSCPNtcheckoutBtn.onclick = function() {
                        let id = this.id.toString().replace("bss-nt-purchase-late-", "")
                        localStorage.setItem('bssBCPNtId', id);
                       validateProductBeforePurchaseLate();
                  }
             }

            document.addEventListener("bss.b2b.amo.doneCheckAMOByBSS", function(event) {
                if (isEnableAMO && BSS_B2B.amo.warning.length > 0) {
                    BSSCPNtcheckoutBtn.onclick = function() {
                        BSS_B2B.amo.showWarningsModal();
                        return false;
                    }
                } else {
                    BSSCPNtcheckoutBtn.onclick = function() {
                        let id = this.id.toString().replace("bss-nt-purchase-late-", "")
                        localStorage.setItem('bssBCPNtId', id);
                        validateProductBeforePurchaseLate();
                    }
                }
            });

        } else {
            BSSCPNtcheckoutBtn.onclick = function() {
                let id = this.id.toString().replace("bss-nt-purchase-late-", "")
                localStorage.setItem('bssBCPNtId', id);
                validateProductBeforePurchaseLate();
            }
        }
    }

    if (BSSCPcheckoutBtn.length) {
        for (let i = 0; i < BSSCPcheckoutBtn.length; i++) {
            if (bssReplaceCheckoutBtn) {
                BSSCPcheckoutBtn[i].style.display = 'none';
            }

            BSSCPcheckoutBtn[i].after(BSSCPNtcheckoutBtn)
            if (BSSCPcheckoutBtn[i].parentElement.className === 'cart__ctas' && bssListRule.length >= 3) {
                BSSCPcheckoutBtn[i].parentElement.style.flexDirection = 'column'
            }
        }
    }
  }
    {% else %}
    let BSSCPNtcheckoutBtn = null;
    let btnText = document.createTextNode(bssPurchaseLateBtnText);
    if (BSSCPcheckoutBtn.length) {
        BSSCPNtcheckoutBtn = document.createElement(BSSCPcheckoutBtn[0].tagName)
        BSSCPNtcheckoutBtn.className = BSSCPcheckoutBtn[0].className + ' bss-b2b-customer-portal-nt-checkout-btn';
        BSSCPNtcheckoutBtn.value = bssPurchaseLateBtnText;
        BSSCPNtcheckoutBtn.id = BSSCPcheckoutBtn[0].id;
        BSSCPNtcheckoutBtn.type = 'button';
        BSSCPNtcheckoutBtn.name = 'checkout';
        BSSCPNtcheckoutBtn.appendChild(btnText);

        let isApplyAMO = false;
        if ((typeof (BSS_B2B) != 'undefined') && BSS_B2B) {
            let isEnableAMO = false;
            if (BSS_B2B.shopModules && (BSS_B2B.shopModules.length > 0)) {
                BSS_B2B.shopModules.forEach(function (sm) {
                    if (sm.code == "amo") {
                        isEnableAMO = sm.status;
                    }
                })
            }

            if (BSS_B2B != undefined && BSS_B2B.amoRules && !BSS_B2B.amoRules.length) {
                BSSCPNtcheckoutBtn.onclick = function () {
                    validateProductBeforePurchaseLate();
                }
            }

            document.addEventListener("bss.b2b.amo.doneCheckAMOByBSS", function (event) {
                if (isEnableAMO && BSS_B2B.amo.warning.length > 0) {
                    BSSCPNtcheckoutBtn.onclick = function() {
                        BSS_B2B.amo.showWarningsModal();
                        return false;
                    }
                } else {
                    BSSCPNtcheckoutBtn.onclick = function() {
                        let id = this.id.toString().replace("bss-nt-purchase-late-", "")
                        localStorage.setItem('bssBCPNtId', id);
                        validateProductBeforePurchaseLate();
                    }
                }
            });

        } else {
            BSSCPNtcheckoutBtn.onclick = function () {
                validateProductBeforePurchaseLate();
            }
        }
    }
    if (BSSCPcheckoutBtn.length) {
        for (let i = 0; i < BSSCPcheckoutBtn.length; i++) {
            if (bssReplaceCheckoutBtn && !(BSSCPcheckoutBtn[i].classList.contains('bss-b2b-customer-portal-nt-checkout-btn'))) {
                BSSCPcheckoutBtn[i].style.display = 'none';
            }
            let checkExistNtBtn = false;
            let BSSCPCheckoutBtnList = null;
            let BSSCPcheckoutBtnParent = BSSCPcheckoutBtn[i].closest('form[action*="/cart"]')
            if (BSSCPcheckoutBtnParent) {
                BSSCPCheckoutBtnList = BSSCPcheckoutBtnParent.querySelectorAll(BSSCPcheckoutBtnQuery);
            }
            if (BSSCPCheckoutBtnList && BSSCPCheckoutBtnList.length) {
                for (let j = 0; j < BSSCPCheckoutBtnList.length; j++) {
                    if (BSSCPCheckoutBtnList[j].classList.contains('bss-b2b-customer-portal-nt-checkout-btn')) { 
                        checkExistNtBtn = true; 
                        }
                }
            }
            if (window.location.hostname === 'beetbg.com') {	
                checkExistNtBtn = false;	
            }            
            if (!checkExistNtBtn) {
                btnText = document.createTextNode(bssPurchaseLateBtnText);
                BSSCPNtcheckoutBtn = document.createElement(BSSCPcheckoutBtn[i].tagName)
                BSSCPNtcheckoutBtn.className = BSSCPcheckoutBtn[i].className + ' bss-b2b-customer-portal-nt-checkout-btn';
                BSSCPNtcheckoutBtn.value = bssPurchaseLateBtnText;
                BSSCPNtcheckoutBtn.id = BSSCPcheckoutBtn[i].id;
                BSSCPNtcheckoutBtn.type = 'button';
                BSSCPNtcheckoutBtn.name = 'checkout';
                BSSCPNtcheckoutBtn.appendChild(btnText);
                BSSCPNtcheckoutBtn.onclick = function () {
                    validateProductBeforePurchaseLate();
                }
                BSSCPcheckoutBtn[i].after(BSSCPNtcheckoutBtn);

                if (typeof Shopify !== 'undefined' && Shopify &&
                    Shopify.shop == "gposavings.myshopify.com" && window.location.pathname == "/cart") {
                    BSSCPcheckoutBtn[0].after(BSSCPNtcheckoutBtn)
                }
            } 
        }
    }
    {% endif %}
    let BSSCPAjaxCartElement = document.querySelectorAll('[id^="AddToCart"]:not(form), ' +
        '[id^="addToCart"]:not(form):not(span),' +
        'button[aria-controls="CartDrawer"],' +
        'a[aria-controls="CartDrawer"], ' +
        'button[name="add"].product-form__add-to-cart,' +
        'button[name="add"].product__add-to-cart-button,' +
        'button[name="add"].add-to-cart,' +
        'a.ajax-cart__toggle,' +
        'span.icon__fallback-text,'
        + 'button#add-to-cart.add-to-cart,'
        + 'a.cart-toggle,'
        + '.mini-cart-wrap[data-cart-mini-toggle],'
        + '.addtocart-button-active[data-product-submit],'
        + 'button.product-form--atc-button,'
        + 'button.productitem--action-atc,'
        + '#add-to-cart-product-template,'
        + '.product-form__add-button[data-action="add-to-cart"],'
        + '.header__cart-toggle[data-action="toggle-mini-cart"],'
        + 'button[type="submit"][data-action="add-to-cart"],'
        + 'button.btn-addtocart,'
        + 'form[action*="/cart/add"] input.AddtoCart,'
        + 'a[data-cart-toggle][data-dropdown-menu],'
        + 'input[data-btn-addtocart],'
        + '.cart-block-click,'
        + 'button[data-btn-addtocart],'
        + 'a.js-cart-trigger[href="/cart"],'
        + 'form.js-product-form,'
        + 'form[action*="/cart/add"] button.single_add_to_cart_button.button,'
        + '.Header__Wrapper .Header__FlexItem a[data-drawer-id="sidebar-cart"],'
        + 'button.product-form__cart-submit,'
        + '.add-to-cart-box .add-to-cart,'
        + 'a.header-cart-btn.cart-toggle,'
        + '.product-page--submit-action .btn,'
        + '.ajax-submit.action_button.add_to_cart,'
        + '.site-header__cart.cart-modal,'
        + 'form[action*="/cart/add"] button.ajax-submit.button--add-to-cart,'
        + 'form[action*="/cart/add"] div.add-to-cart button.button[type="submit"],'
        + 'a.add-cart-btn,'
        + 'button.tt-dropdown-toggle,'
        + '.quick-view button.add-to-cart-btn.btn,'
        + 'button.add.font--secondary-button,'
        + 'button[type="submit"].gf_add-to-cart.product-form-product-template,'
        + 'a.header--cart-link.font--accent,'
        + '.cart-container,'
        + '.icon-bag.mini_cart.dropdown_link,'
        + 'a.my-cart-link,'
        + '.product-form--button-container button.product-form--add-to-cart,'
        + '.product-form--submit span.price,'
        + 'a.push_side.pr.cb.chp.db,'
        + '.ProductForm__AddToCart,'
        + '.slideout__trigger-mobile-menu.js-mini-cart-trigger.js-slideout-open,'
        + 'button.btn.btn--full.btn--status.btn--animated.js-product-button-add-to-cart,'
        + 'a.header__btn-cart.js-popup-button,'
        + '.payment-buttons button[data-add-to-cart],'
        + 'a.js-product-button-add-to-cart,'
        + '.js-drawer-open-cart,'
        + 'button.btn.btn--tertiary.add-to-cart,'
        + '.cart-link,'
        + '.mini-cart a.icon-link,'
        + '.quick-cart__indicator,'
        + '.add-to-cart-box,'
        + '.header-wrapper .mini-cart,'
        + '.woodmart-add-btn,'
        + '.ajax-cart.ajax-cart--drawer,'
        + '#custom_atc_button,'
        + '.header-middle .mini-cart')

    for (let i = 0; i < BSSCPAjaxCartElement.length; i++) {
        BSSCPAjaxCartElement[i].onclick = function () {
            setTimeout(() => {
                let BSSCPViewCartBtn = document.querySelectorAll('.cart-popup a[href*="/cart"], #CartDrawer button[type="submit"], #ajaxifyCart button[type="submit"], .button.checkout.wc-forward, .off-canvas--right-sidebar button[type="submit"][name="checkout"], .atc-banner--cart .button-primary.atc-button--checkout');
                if (BSSCPViewCartBtn.length) {
                    for (let y = 0; y < BSSCPViewCartBtn.length; y++) {
                        let cpViewCartBtnParentClass = BSSCPViewCartBtn[y].parentElement.className.split(' ').join('.');
                        let BSSCPViewCartBtnParent = document.querySelectorAll(
                            cpViewCartBtnParentClass
                            ? '.' + cpViewCartBtnParentClass + ' .bss-b2b-customer-portal-nt-checkout-btn'
                            : '.bss-b2b-customer-portal-nt-checkout-btn'
                        );
                        if (!BSSCPViewCartBtnParent.length) {
                        {% if nt_apply_to == "2" %}
                        for(let i = bssListRule.length - 1; i >= 0; i-- ) {
                            let rule = bssListRule[i];
                            createMiniNTCheckoutBtn(rule.name, 'bss-nt-purchase-late-' + rule.id, BSSCPViewCartBtn[0].tagName, BSSCPViewCartBtn[0].className, true, BSSCPViewCartBtn[y])
                        }
                        {% else %}
                            createMiniNTCheckoutBtn(bssPurchaseLateBtnText, BSSCPViewCartBtn[0].id, BSSCPViewCartBtn[0].tagName, BSSCPViewCartBtn[0].className, false, BSSCPViewCartBtn[y])
                        {% endif %}
                        }
                    }
                }
            }, 2000)
        }
    }
    let fixAjaxCartElement = document.querySelectorAll('.icon-cart-header, .woodmart-cart-wrapper, .icon.header__icon, .top-cart-holder.hover-dropdown');
    for (let i = 0; i < fixAjaxCartElement.length; i++) {
        fixAjaxCartElement[i].addEventListener("mouseover", function () {
            setTimeout(() => {
                let BSSCPViewCartBtn = document.querySelectorAll('form[action="/cart"] button[type="submit"],' +
                    '.cart-popup a[href*="/cart"],' +
                    '#CartDrawer button[type="submit"],' +
                    '#ajaxifyCart button[type="submit"],' +
                    '.header-wrapper .mini-cart a[href*="/checkout"],' +
                    '.header-middle .mini-cart a[href*="/checkout"],' +
                    '.button.checkout.wc-forward,' +
                    '[name="checkout"],' +
                    '.ajax-success-modal.halo-modal a.btn.btn-checkout.show'
                );
                if (BSSCPViewCartBtn.length) {
                    for (let y = 0; y < BSSCPViewCartBtn.length; y++) {
                        let BSSCPViewCartBtnParent = BSSCPViewCartBtn[y].parentElement.querySelectorAll('.' + BSSCPViewCartBtn[y].parentElement.className.split(' ').join('.') + ' .bss-b2b-customer-portal-nt-checkout-btn');
                        if (!BSSCPViewCartBtnParent.length) {
                        {% if nt_apply_to == "2" %}
                            for(let i = bssListRule.length - 1; i >= 0; i-- ) {
                                let rule = bssListRule[i];
                                createMiniNTCheckoutBtn(rule.name, 'bss-nt-purchase-late-' + rule.id, BSSCPViewCartBtn[0].tagName, BSSCPViewCartBtn[0].className, true, BSSCPViewCartBtn[y])
                            }
                        {% else %}
                            createMiniNTCheckoutBtn(bssPurchaseLateBtnText, BSSCPViewCartBtn[0].id, BSSCPViewCartBtn[0].tagName, BSSCPViewCartBtn[0].className, false, BSSCPViewCartBtn[y])
                        {% endif %}
                        }
                    }
                }
            }, 200)
        })
    }
}
const createMiniNTCheckoutBtn = function (btnText, id, tagName, className, multipleBtn, btnViewCart) {
    let BSSCPMiniNtcheckoutBtn = null;
    const btnTextMiniCart = document.createTextNode(btnText);
    BSSCPMiniNtcheckoutBtn = document.createElement(tagName);
    BSSCPMiniNtcheckoutBtn.className = className + ' bss-b2b-customer-portal-nt-checkout-btn';
    BSSCPMiniNtcheckoutBtn.value = btnText;
    BSSCPMiniNtcheckoutBtn.id = id;
    BSSCPMiniNtcheckoutBtn.type = 'button';
    BSSCPMiniNtcheckoutBtn.name = 'checkout';
    BSSCPMiniNtcheckoutBtn.appendChild(btnTextMiniCart);
    if (multipleBtn) {
        BSSCPMiniNtcheckoutBtn.onclick = function() {
            let id = this.id.toString().replace("bss-nt-purchase-late-", "")
            localStorage.setItem('bssBCPNtId', id);
            validateProductBeforePurchaseLate();
        }
    } else {
        BSSCPMiniNtcheckoutBtn.onclick = function () {
            validateProductBeforePurchaseLate();
        }
    }
    if (bssReplaceCheckoutBtn) {
        btnViewCart.style.display = 'none';
    }
    btnViewCart.after(BSSCPMiniNtcheckoutBtn);
}

if (window.location.hostname === 'beetbg.com') {	
    setTimeout(()=> {	
        bcpNTFunction();	
    }, 3000)

    setTimeout(()=>{                  	
        let addToCartBtns = document.querySelectorAll('form[action="/cart/add"] .product-form--atc .product-form--atc-button')	
        if (addToCartBtns.length) {	
            for (let i = 0; i < addToCartBtns.length; i++) {	
                let addToCartBtn = addToCartBtns[i];	
                addToCartBtn.onclick = () => {	
                    setTimeout(()=> {	
                        bcpNTFunction();
                    }, 1500)	
                }	
            }	
        }	
    }, 3500)    
} else {	
    bcpNTFunction();	
}

// fix for b2b-holistique by dongnv
if (window.location.hostname === 'b2b-holistique.myshopify.com') {
    window.addEventListener('bss_b2b_bcp_trigger_again', function () {
        bcpNTFunction();
    })
}

if (window.location.hostname === 'gibsons-b2b-new.myshopify.com') {
  const miniCartCounter = document.querySelector(
    '#mini-cart > div.ajax-cart__header-wrapper.grid__wrapper.edge > div.span-4.sm-span-4.auto.a-right.v-center > p > .js-cart-count.inline-block'
  );
  if (miniCartCounter) {
    const mCallback = mutations => {
      for (let mutation of mutations) {
        bcpNTFunction();
      }
    };

    const observer = new MutationObserver(mCallback);
    observer.observe(miniCartCounter, {
      childList: true,
      subtree: true,
    });
  }

  if (window.location.pathname === '/cart') {
    const cartCounter = document.querySelector(
      '.cart-page.ajax-cart__page-wrapper.cart-type--drawer.main__section .ajax-cart__header-wrapper.grid__wrapper.edge .js-cart-count'
    );
    if (cartCounter) {
      const mCallback = mutations => {
        for (let mutation of mutations) {
          bcpNTFunction();
        }
      };

      const observer = new MutationObserver(mCallback);
      observer.observe(cartCounter, {
        childList: true,
        subtree: true,
      });
    }
  }
}
              
// fix for edibilis by mitri ,fix for zusenzomer by dongnv
if (['www.edibilis.co.uk', 'www.zusenzomer.nl'].indexOf(window.location.hostname) !== -1) {
    let delayTime = 0;
    if (window.location.hostname === 'www.zusenzomer.nl') {
        delayTime = 1800;
    }
    setTimeout(function () {
        const handleChangeQuantity = function () {
            let quantityButtonSelector = document.querySelectorAll(".quantity-selector__button," + ".product-form__add-button," + ".product-item__action-button");
            let quantityInputSelector = document.querySelectorAll(".quantity-selector__value");
            if (window.location.hostname === 'www.zusenzomer.nl') {
                quantityButtonSelector = document.querySelectorAll(".ajaxcart__row .ajaxcart__quantity [type='button']")
                quantityInputSelector = document.querySelectorAll(".ajaxcart__row .ajaxcart__quantity [type='text']")
            }
            if (quantityButtonSelector && quantityButtonSelector.length) {
                for (let i = 0; i < quantityButtonSelector.length; i++) {
                    quantityButtonSelector[i].onclick = function () {
                        setTimeout(function () {
                            bcpNTFunction();
                            handleChangeQuantity();
                        }, 1800)
                    }
                }
            }
            if (quantityInputSelector && quantityInputSelector.length) {
                for (let i = 0; i < quantityInputSelector.length; i++) {
                    quantityInputSelector[i].onchange = function () {
                        setTimeout(function () {
                            bcpNTFunction();
                            handleChangeQuantity();
                        }, 1800)
                    }
                }
            }
        }
        handleChangeQuantity();
    }, delayTime)
}</script>{% endcapture %}{% assign isConfigAppliedShowBtn = false %}
{% assign customerTags = customer.tags | join: ', ' | downcase %}
{% assign customerId = customer.id | append: "" | downcase %}
{% if nt_apply_to == "1" or nt_apply_to == "2" %}
    {% assign isConfigAppliedShowBtn = true %}
{% elsif nt_apply_to == "0" %}
    {% if list_nt_rules_apply_to contains "0" %}
        {% assign isConfigAppliedShowBtn = true %}
    {% else %}
        {% if list_nt_rules_apply_to contains "1" %}
            {% for id in list_nt_rules_customer_ids %}
                {% if customerId == id %}
                    {% assign isConfigAppliedShowBtn = true %}
                    {% break %}
                {% endif %}
            {% endfor %}
        {% endif %}
        {% if list_nt_rules_apply_to contains "2" %}
            {% for tag in list_nt_rules_customer_tags %}
                {% assign downcaseTag = tag | downcase %}
                {% if customerTags contains downcaseTag %}
                    {% assign isConfigAppliedShowBtn = true %}
                    {% break %}
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endif %}
{% endif %}

{% if isConfigAppliedShowBtn %}
    {{ scriptNtCheckoutBtn }}
{% endif %}
